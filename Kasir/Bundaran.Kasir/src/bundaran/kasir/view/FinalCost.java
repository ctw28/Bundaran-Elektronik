/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bundaran.kasir.view;

import com.sun.java.swing.plaf.windows.WindowsLookAndFeel;
import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingWorker;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import org.apache.http.NameValuePair;
import org.apache.http.message.BasicNameValuePair;
import sun.awt.AppContext;
import bundaran.kasir.MainClass;
import bundaran.kasir.TokoBangunanKasir;
import bundaran.kasir.backgroundtask.ServerRequestController;
import bundaran.kasir.report.StruckReport;
import bundaran.kasir.util.MoveFrameListener;
import bundaran.kasir.util.NumberValidation;
import bundaran.kasir.util.OfflineTransactionSaver;
import bundaran.kasir.util.OnlineTransactionSaver;

/**
 *
 * @author HAMSTER-BIRU
 */
public final class FinalCost extends javax.swing.JDialog {

    String backTaskID;
    ArrayList<ArrayList<String>> dataBarang;
    ArrayList<String> dataPembeli;
    PayDetails payDetail = null;

    HasilCari cari;
    Kasir kasir;
    //RefreshContentData rcd;
    /**
     * Jika transaksi lagsng dibayar
     */
    boolean isPayed;

    int up = 0;
    String[] valve;

    OnlineTransactionSaver transactionSaver;
    boolean fromSearching;

    public FinalCost(
            boolean fromSearching,
            boolean isPayed,
            Kasir instance, PayDetails payDetail,
            HasilCari cari,
            ArrayList<String> dataPembeli,
            ArrayList<ArrayList<String>> dataBarang,
            String... valve
    /**
     * terdiri atas 2 array 0 = total harga 1 = nilai bayar 2 = dikon atau 3
     * kembalian
     */
    ) {
        super((Frame) null, true);
        this.cari = cari;
        this.isPayed = isPayed;
        this.kasir = instance;
        this.payDetail = payDetail;
        this.valve = valve;
        this.fromSearching = fromSearching;

        if (payDetail != null) {
            payDetail.setVisible(false);
        }

        initComponents();
        setLocationRelativeTo(null);
        this.dataBarang = dataBarang;
        this.dataPembeli = dataPembeli;
//        System.out.println(valve.length+"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");

        if (this.isPayed && valve != null && valve.length >= 2) {
            setDetailPay(valve);
        }

        if (!isPayed && valve != null && valve.length >= 2) {
            setDataDetail(valve);
        }

        //goext = true;
    }

    void setDataDetail(String... valve) {
        NumberValidation nv = new NumberValidation(",", "Rp ");
        discount.setText("Potongan Harga " + valve[2] + "%");
        costTotal.setText(nv.fieldChecked(valve[0]));
        bayar.setText(nv.fieldChecked(valve[1]));
        kembalian.setText(nv.fieldChecked(valve[3]));
    }

    /**
     *
     * @param valve
     */
    void setDetailPay(String... valve) {
        int cost = Integer.parseInt(valve[0]);
        int payed = Integer.parseInt(valve[1]);
//        int discountt = Integer.parseInt(valve[2]);

        NumberValidation nv = new NumberValidation(",", "Rp ");

        costTotal.setText(nv.fieldChecked(valve[0]));
        //costTotal.setForeground(Color.RED);
//        this.discount.setText(this.discount.getText().substring(0, this.discount.getText().length() - 4)
//                + String.valueOf(discountt) + "%");

        bayar.setText(nv.fieldChecked(valve[1]));

        int cashBack = payed - cost;
        kembalian.setText(nv.fieldChecked(String.valueOf(cashBack)));
        //kembalian.setForeground(Color.yellow);

    }

    /**
     *
     * @param data
     * @return
     */
    synchronized List<NameValuePair> enchanceData(ArrayList<String> data, String[] identifier) {
        List<NameValuePair> pairs = new ArrayList<>();

        int i = 0;
        for (String pair : identifier) {
            pairs.add(new BasicNameValuePair(pair, data.get(i)));
            i++;
        }

        return pairs;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        progressText1 = new javax.swing.JLabel();
        panelDetail = new javax.swing.JPanel();
        labelBarcodeName = new javax.swing.JLabel();
        xxx = new javax.swing.JLabel();
        barcode2 = new javax.swing.JLabel();
        barcode4 = new javax.swing.JLabel();
        labelBarcodeName3 = new javax.swing.JLabel();
        barcode5 = new javax.swing.JLabel();
        costTotal = new javax.swing.JLabel();
        bayar = new javax.swing.JLabel();
        kembalian = new javax.swing.JLabel();
        discount = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(246, 246, 246));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 11)); // NOI18N

        MoveFrameListener frameListenerx = new MoveFrameListener(jPanel2);
        addMouseListener(frameListenerx);
        addMouseMotionListener(frameListenerx);
        jPanel2.setBackground(new java.awt.Color(0, 153, 153));

        progressText1.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        progressText1.setForeground(new java.awt.Color(255, 255, 255));
        progressText1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tokobangunan/kasir/res/logo14.PNG"))); // NOI18N
        progressText1.setText("   Pembayaran");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(progressText1)
                .addContainerGap(337, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(progressText1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelDetail.setBackground(new java.awt.Color(255, 255, 255));
        panelDetail.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        labelBarcodeName.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        labelBarcodeName.setText("Total Harga");

        xxx.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        xxx.setText("Bayar");

        barcode2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        barcode2.setText(":");

        barcode4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        barcode4.setText(":");

        labelBarcodeName3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        labelBarcodeName3.setText("Kembalian");

        barcode5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        barcode5.setText(":");

        costTotal.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        costTotal.setForeground(new java.awt.Color(255, 0, 0));
        costTotal.setText("Total Harga");

        bayar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        bayar.setForeground(new java.awt.Color(0, 204, 51));
        bayar.setText("Total Harga");

        kembalian.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        kembalian.setForeground(new java.awt.Color(0, 51, 255));
        kembalian.setText("Total Harga");

        javax.swing.GroupLayout panelDetailLayout = new javax.swing.GroupLayout(panelDetail);
        panelDetail.setLayout(panelDetailLayout);
        panelDetailLayout.setHorizontalGroup(
            panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDetailLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelBarcodeName)
                    .addComponent(xxx)
                    .addComponent(labelBarcodeName3))
                .addGap(94, 94, 94)
                .addGroup(panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDetailLayout.createSequentialGroup()
                        .addComponent(barcode2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(costTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDetailLayout.createSequentialGroup()
                        .addComponent(barcode4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bayar, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDetailLayout.createSequentialGroup()
                        .addComponent(barcode5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(kembalian, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        panelDetailLayout.setVerticalGroup(
            panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDetailLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(barcode2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(costTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labelBarcodeName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(xxx, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(barcode4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bayar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelBarcodeName3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(barcode5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(kembalian, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        discount.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        discount.setText("Potongan Harga 100%");
        discount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                discountKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                discountKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                discountKeyTyped(evt);
            }
        });

        jButton1.setUI(new bundaran.kasir.util.WarningUI());
        jButton1.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tokobangunan/kasir/res/close.png"))); // NOI18N
        jButton1.setText("TERIMA KASIH ATAS KUNJUNGAN ANDA     ");
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jButton1KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(discount)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panelDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(discount)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(panelDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        finalRespon();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            finalRespon();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            if (payDetail != null) {
                payDetail.setVisible(true);
            }
            dispose();
        }
    }//GEN-LAST:event_jButton1KeyPressed

    private void jButton1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyTyped

    }//GEN-LAST:event_jButton1KeyTyped

    private void discountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountKeyTyped

    }//GEN-LAST:event_discountKeyTyped

    private void discountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountKeyReleased

    }//GEN-LAST:event_discountKeyReleased

    private void discountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountKeyPressed

    }//GEN-LAST:event_discountKeyPressed

    void finalRespon() {
        if (cari != null) {
            cari.dispose();
        }

        if (payDetail != null) {
            payDetail.dispose();
        }

        dispose();

        // remove swing worker tables instance
        AppContext appContext = AppContext.getAppContext();
        if (appContext != null) {
            appContext.remove(SwingWorker.class);
        }

        backTaskID = TokoBangunanKasir.getIDTask();

        /**
         * Jika dalam keadaan ONLINE MODE
         */
        if (!TokoBangunanKasir.OFFLINE_MODE && isPayed) {
            transactionSaver = new OnlineTransactionSaver(kasir, backTaskID);
            saveIntoBackground();
        } else if (TokoBangunanKasir.OFFLINE_MODE && isPayed) {
            kasir.newTrancsaction();
            OfflineTransactionSaver offlineTransactionSaver = new OfflineTransactionSaver(dataPembeli, dataBarang);
            offlineTransactionSaver.execute(0);
        } else if (!TokoBangunanKasir.OFFLINE_MODE && !isPayed && fromSearching) {
            transactionSaver = new OnlineTransactionSaver(kasir, backTaskID);
            updateIntoBackground();
        } else if (!TokoBangunanKasir.OFFLINE_MODE && !isPayed && !fromSearching) {
            transactionSaver = new OnlineTransactionSaver(kasir, backTaskID);
            PayDetails.now.dispose();
            saveIntoBackground();
        } else if (TokoBangunanKasir.OFFLINE_MODE && !isPayed && fromSearching) {
            updateIntoBackground();
        } else if (TokoBangunanKasir.OFFLINE_MODE && !isPayed && !fromSearching) {
            saveIntoBackground();
        }

        ///Print struk
    }

    /**
     * fungsi yang digunakan untuk mengupdate data2 tansaksi yang belum lunas
     */
    synchronized void updateIntoBackground() {

        Date date = new Date();
        String id = String.valueOf(new SimpleDateFormat("yyyy-MM-dd").format(date));

        String beofrePayed = dataPembeli.get(10);

        int totalTerbayar = Integer.parseInt(dataPembeli.get(10)) + Integer.parseInt(valve[1]);

        String status = (totalTerbayar >= Integer.parseInt(dataPembeli.get(8))) ? "LUNAS" : "BELUM LUNAS";
        totalTerbayar = (status.equals("LUNAS")) ? Integer.parseInt(dataPembeli.get(8)) : totalTerbayar;

        //dataPembeli.set(9, String.valueOf(totalTerbayar));
        dataPembeli.set(10, String.valueOf(totalTerbayar));
        //dataPembeli.set(8, valve[0]); // biaya transaksi
        dataPembeli.set(7, valve[2]); // diskon
        dataPembeli.set(4, status); // status
        dataPembeli.set(6, id); // tanggal pembayaran

        int i = 0;
        for (ArrayList<String> arrayList : dataBarang) {
            ArrayList<String> temp = arrayList;
            temp.set(2, status); //status
            dataBarang.set(i, temp);
            i++;
        }

        if (TokoBangunanKasir.OFFLINE_MODE && !isPayed) {
            OfflineTransactionSaver offlineTransactionSaver = new OfflineTransactionSaver(dataPembeli, dataBarang);
            offlineTransactionSaver.execute(0);
        } else /**
         * Mengupdate status pembayaran jika sudah lunas
         */
        {
            transactionSaver.execute(dataPembeli, dataBarang);

            createStruck(beofrePayed);
        }
    }

    /**
     * fungsi yang digunakan untuk menyimpan data2 tansaksi yang lagsung
     * dibayar(Langsung Lunas)
     */
    synchronized void saveIntoBackground() {


        if (payDetail != null) {
            payDetail.dispose();
        }
        kasir.newTrancsaction();
//        dataPembeli.set(4,"100"); // diskon

        Date date = new Date();
        String id = String.valueOf(new SimpleDateFormat("yyyy-MM-dd").format(date));
//        dataPembeli.set(1, id); // tgl pembayaran
        //
//        System.out.println(dataPembeli);
//        System.out.println(dataBarang);
        int i = 0;
        for (ArrayList<String> arrayList : dataBarang) {
            ArrayList<String> temp = arrayList;
            dataBarang.set(i, temp);
            i++;
        }

        if (TokoBangunanKasir.OFFLINE_MODE && !isPayed) {
            OfflineTransactionSaver offlineTransactionSaver = new OfflineTransactionSaver(dataPembeli, dataBarang);
            offlineTransactionSaver.execute(0);
        } else /**
         * Menyimpan data transaksi ke database online
         */
        {
            transactionSaver.execute(dataPembeli, dataBarang);
        }

        /*
        PrintStruckController psc = new PrintStruckController(this, "EPSON LX-310 ESC/P");
        psc.execute();
         */
        createStruck("0");
    }

    private ServerRequestController getRequestInstance(Object objectProgress, List<NameValuePair> pairs, String process, String message) {
        ServerRequestController controller = new ServerRequestController(backTaskID, this, objectProgress, process, pairs, message);
        return controller;
    }

    private void createStruck(String payedBefore) {
        String[] colNames = new String[]{"Nama Barang", "Jenis", "Harga (Rp)", "Jumlah", "Total Harga (Rp)"};

        Object[] object = new Object[1];
        object[0] = dataBarang;

        Object[] pembeli = new Object[1];
        pembeli[0] = dataPembeli;

        //StruckReport detail
        //= new StruckReport(colNames, pembeli, object, kasir.dataBarang, "DATA TRANSAKSI JATUH TEMPO", false, "data_struck.pdf");
        MainClass detail
                = new MainClass(colNames, pembeli, object, kasir.dataBarang, "DATA TRANSAKSI JATUH TEMPO", false, "data_struck.pdf");

        try {
            detail.doPrint(valve, payedBefore);
        } catch (Exception ex) {
            Logger.getLogger(FinalCost.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    void convertToDocx() throws IOException {

        // DocumentPrinte
        return;

        /*
        XWPFDocument doc = new XWPFDocument();
        
        String pdf = "data_struck.pdf";
        com.itextpdf.text.pdf.PdfReader reader = new com.itextpdf.text.pdf.PdfReader(pdf);
        
        PdfReaderContentParser parser = new PdfReaderContentParser(reader);
        
        for (int i = 1; i <= reader.getNumberOfPages(); i++) {
            TextExtractionStrategy strategy = parser.processContent(i,
                    new SimpleTextExtractionStrategy());
            String text = strategy.getResultantText();
            XWPFParagraph p = doc.createParagraph();
            XWPFRun run = p.createRun();
            run.setText(text);
            run.addBreak(BreakType.PAGE);
        }
        
        FileOutputStream out = new FileOutputStream("data_struk_doc.docx");
        doc.write(out);
        out.close();
        reader.close();
        
         */
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try {
            UIManager.setLookAndFeel(new WindowsLookAndFeel());
            new FinalCost(false, false, null, null, null, null, null).setVisible(true);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(FinalCost.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel barcode2;
    private javax.swing.JLabel barcode4;
    private javax.swing.JLabel barcode5;
    private javax.swing.JLabel bayar;
    private javax.swing.JLabel costTotal;
    private javax.swing.JLabel discount;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel kembalian;
    private javax.swing.JLabel labelBarcodeName;
    private javax.swing.JLabel labelBarcodeName3;
    private javax.swing.JPanel panelDetail;
    private javax.swing.JLabel progressText1;
    private javax.swing.JLabel xxx;
    // End of variables declaration//GEN-END:variables

}
