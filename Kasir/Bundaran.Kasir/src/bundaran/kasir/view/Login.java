/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bundaran.kasir.view;

import annas.jdbc.service.configuration.DatabaseTableList;
import annas.jdbc.service.impl.SqlImplementImpl;
import annas.jdbc.service.model.QueryAttribut;
import annas.jdbc.service.model.SelectClauseAttribut;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import org.json.JSONArray;
import org.json.JSONObject;
import sun.awt.AppContext;
import bundaran.kasir.TokoBangunanKasir;
import bundaran.kasir.util.staticIdentifier;
import bundaran.kasir.view.progress.RequestProgress;
import bundaran.kasir.backgroundtask.RequestVoidCallbackTask;
import bundaran.kasir.util.MoveFrameListener;
import bundaran.kasir.util.RewriteDatabase;
import bundaran.kasir.util.RefreshContentData;

/**
 *
 * @author AsyncTask.Void.087
 */
public class Login extends javax.swing.JFrame implements RequestVoidCallbackTask {
    
    public static String USER_LOGGED = "none";

    ArrayList<ArrayList<String>> dataBarang;

    /**
     * Merupakan data dari transaksi yag belum lunas
     */
    public ArrayList<ArrayList<String>> dataPenjualan;

    /**
     * Merupakan data barang dari tansaksi yang belum lunas
     */
    public ArrayList<ArrayList<String>> dataPenjualanBarang;

    RequestProgress progress;

    String backTaskID;

    /**
     * Nama tabel admin
     */
    private final String tableAdminName = DatabaseTableList.getTableNames()[1];
    String[] tableAdminStructre = DatabaseTableList.getColumnList().get(tableAdminName);

    RefreshContentData rcd;

    /**
     * Creates new form Login
     *
     * @param dataAdmin
     */
    public Login(ArrayList<ArrayList<String>> dataAdmin) {
        initComponents();
        setLocationRelativeTo(null);

        /*
        if (dataAdmin == null || dataAdmin.size() <= 0) {
            offlineModeButton.setVisible(false);
        }
        */
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        progressText1 = new javax.swing.JLabel();
        progressText7 = new javax.swing.JLabel();
        user = new javax.swing.JTextField();
        pass = new javax.swing.JPasswordField();
        log = new javax.swing.JButton();
        offlineModeButton = new javax.swing.JButton();
        labelBarcodeName = new javax.swing.JLabel();
        labelBarcodeName1 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        labelBarcodeName3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(246, 246, 246));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(104, 104, 104)));

        MoveFrameListener frameListenerx = new MoveFrameListener(jPanel2);
        addMouseListener(frameListenerx);
        addMouseMotionListener(frameListenerx);
        jPanel2.setBackground(new java.awt.Color(0, 153, 153));

        progressText1.setFont(new java.awt.Font("Arial", 3, 11)); // NOI18N
        progressText1.setForeground(new java.awt.Color(255, 255, 255));
        progressText1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tokobangunan/kasir/res/logo14.PNG"))); // NOI18N
        progressText1.setText("   Halaman Masuk Aplikasi Kasir");

        progressText7.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        progressText7.setForeground(new java.awt.Color(255, 255, 255));
        progressText7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tokobangunan/kasir/res/close.png"))); // NOI18N
        progressText7.setToolTipText("Tutup");
        progressText7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                progressText7MouseClicked(evt);
            }
        });
        progressText7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                progressText7KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(progressText1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(progressText7)
                .addGap(19, 19, 19))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(progressText7)
                    .addComponent(progressText1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        user.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        user.setMargin(new java.awt.Insets(2, 10, 2, 10));
        user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userActionPerformed(evt);
            }
        });

        pass.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        pass.setMargin(new java.awt.Insets(2, 10, 2, 10));
        pass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passActionPerformed(evt);
            }
        });

        log.setUI(new bundaran.kasir.util.WarningUI());
        log.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        log.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tokobangunan/kasir/res/login16.PNG"))); // NOI18N
        log.setText("MASUK   ");
        log.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        log.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logActionPerformed(evt);
            }
        });

        offlineModeButton.setUI(new bundaran.kasir.util.WarningUI());
        offlineModeButton.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        offlineModeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tokobangunan/kasir/res/offline.PNG"))); // NOI18N
        offlineModeButton.setText("GUNAKAN OFFLINE   ");
        offlineModeButton.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        offlineModeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                offlineModeButtonActionPerformed(evt);
            }
        });

        labelBarcodeName.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        labelBarcodeName.setText("Username                                 :");

        labelBarcodeName1.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        labelBarcodeName1.setText("Password                                 :");

        jLabel13.setFont(new java.awt.Font("Arial", 2, 11)); // NOI18N
        jLabel13.setText("Toko Bundaran Elektronik, Kendari, Sulawesi Tenggara");

        labelBarcodeName3.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        labelBarcodeName3.setForeground(new java.awt.Color(0, 153, 51));
        labelBarcodeName3.setText("ONLINE MODE");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(labelBarcodeName1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(labelBarcodeName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(pass, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                                            .addComponent(user)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(offlineModeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(log, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(labelBarcodeName3))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap(63, Short.MAX_VALUE)
                                .addComponent(jLabel13)
                                .addGap(124, 124, 124)))
                        .addGap(34, 34, 34)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(labelBarcodeName3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelBarcodeName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelBarcodeName1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(log, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(offlineModeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userActionPerformed

        logActionPerformed(evt);

    }//GEN-LAST:event_userActionPerformed

    private void logActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logActionPerformed

        //dispose();
        String pengguna = user.getText();
        String sandi = pass.getText();
        USER_LOGGED = pengguna;
        if (pengguna.isEmpty() || sandi.isEmpty()) {
            return;
        }

        if (!TokoBangunanKasir.OFFLINE_MODE) {
            // remove swing worker tables instance
            AppContext appContext = AppContext.getAppContext();
            if (appContext != null) {
                appContext.remove(SwingWorker.class);
            }
            
            backTaskID = TokoBangunanKasir.getIDTask();
            progress = new RequestProgress(this, backTaskID);
            progress.setVisible(true);

            rcd = new RefreshContentData(this, backTaskID, progress);
            rcd.enchanceProductData();
        } else {

            try {
                SelectClauseAttribut attribut = new SelectClauseAttribut(
                        new String[]{
                            tableAdminStructre[1],
                            tableAdminStructre[2],
                            tableAdminStructre[3]
                        }, // kolom yang ada di database
                        new String[]{pengguna, sandi, "Client"},
                        new boolean[]{false, false, false},
                        tableAdminName);

                SqlImplementImpl impl = new SqlImplementImpl();

                if (!impl.goSelectWith(attribut).isEmpty()) {
                    dispose();
                    new Kasir(
                            getOfflineData(DatabaseTableList.getTableNames()[0]),
                            getOfflineData(DatabaseTableList.getTableNames()[2]), 
                            getOfflineData(DatabaseTableList.getTableNames()[4]), 
                            null).setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(null, "Kombinasi username dan password tidak sesuai...");
                }

            } catch (RemoteException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("salaaaaahhhh");
            }

        }

    }//GEN-LAST:event_logActionPerformed

    
    private ArrayList<ArrayList<String>> getOfflineData(String tableName){
        try {
            QueryAttribut qAttribut;
            SqlImplementImpl query = new SqlImplementImpl();
            qAttribut = new QueryAttribut(false, null, tableName, "");
            return query.goSelect(qAttribut);
        } catch (RemoteException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }
    }

    private void passActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passActionPerformed

        logActionPerformed(evt);
    }//GEN-LAST:event_passActionPerformed

    private void offlineModeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_offlineModeButtonActionPerformed
        if (TokoBangunanKasir.OFFLINE_MODE) {
            TokoBangunanKasir.OFFLINE_MODE = false;
            offlineModeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tokobangunan/kasir/res/offline.PNG"))); // NOI18N
            offlineModeButton.setText("GUNAKAN OFFLINE   ");
            labelBarcodeName3.setText("ONLINE MODE");
            labelBarcodeName3.setForeground(new java.awt.Color(0, 153, 51));
        } else {
            TokoBangunanKasir.OFFLINE_MODE = true;
            offlineModeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tokobangunan/kasir/res/online.PNG"))); // NOI18N
            offlineModeButton.setText("GUNAKAN ONLINE   ");
            labelBarcodeName3.setText("OFFLINE MODE");
            labelBarcodeName3.setForeground(Color.RED);
        }
        //offlineModeButton.setVisible(false);
    }//GEN-LAST:event_offlineModeButtonActionPerformed

    private void progressText7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_progressText7MouseClicked

        System.exit(0);
    }//GEN-LAST:event_progressText7MouseClicked

    private void progressText7KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_progressText7KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            System.exit(0);
        }
    }//GEN-LAST:event_progressText7KeyPressed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel13;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel labelBarcodeName;
    private javax.swing.JLabel labelBarcodeName1;
    private javax.swing.JLabel labelBarcodeName3;
    private javax.swing.JButton log;
    private javax.swing.JButton offlineModeButton;
    private javax.swing.JPasswordField pass;
    private javax.swing.JLabel progressText1;
    private javax.swing.JLabel progressText7;
    private javax.swing.JTextField user;
    // End of variables declaration//GEN-END:variables

    @Override
    public void processDone(JSONObject jSONObject, String process) {

        switch (process) {
            case "LOGIN":
                int k = 0;
                if (jSONObject != null) {
                    JSONArray array = jSONObject.getJSONArray("user_data_by");
                    if (array != null && array.length() > 0) {

                        RewriteDatabase rd = new RewriteDatabase(dataBarang, dataPenjualan, dataPenjualanBarang);


                            dispose();
                            Kasir kasir = new Kasir(dataBarang, dataPenjualan, dataPenjualanBarang, progress);
                            kasir.setVisible(true);
                        
                    }
                } else {
                    httpParsingError(process, "Kombinasi username dan password tidak valid");
                }
                break;
            case "SELECT_ALL_PRODUCT":
                if (jSONObject != null) {
                    JSONArray array2nd = jSONObject.getJSONArray("all_product_data");
                    if (array2nd != null && array2nd.length() > 0) {
                        dataBarang = convertJsonToList(array2nd, staticIdentifier.DATABASE_SEVER_STRUCTURE.TABEL_BARANG);

                        //RewriteDatabase rd = new RewriteDatabase(dataBarang);
                        //if (rd.execute(DatabaseTableList.getTableNames()[0])) 
                        rcd.enchanceUserUnLunas();
                    }
                } else {
                    dataBarang = null;
                }
                break;
            case "SELECT_ALL_SELLED_UNLUNAS":
                //int k = 0;

                if (jSONObject != null) {
                    //all_data_penjualan_by_status
                    JSONArray array3rd = jSONObject.getJSONArray("all_data_penjualan_by_status");
                    if (array3rd != null && array3rd.length() > 0) {
                        dataPenjualan = convertJsonToList(array3rd, staticIdentifier.DATABASE_SEVER_STRUCTURE.TABEL_PENJUALAN);

                    }

                } else {

                }

                rcd.enchanceUserProductUnLunas();
                break;
            case "SELECT_ALL_PRODUCT_SELLED_UNLUNAS":
                if (jSONObject != null) {
                    //all_data_penjualan_by_status
                    JSONArray array4th = jSONObject.getJSONArray("all_data_penjualan_barang_by_status");
                    if (array4th != null && array4th.length() > 0) {
                        dataPenjualanBarang = convertJsonToList(array4th, staticIdentifier.DATABASE_SEVER_STRUCTURE.TABEL_PENJUALAN_BARANG);

                    }

                } else {

                }
                rcd.enchanceUserConfirmation(user.getText(), pass.getText());
                break;

            default:

        }

    }

    private ArrayList<ArrayList<String>> convertJsonToList(JSONArray array, String[] tableStructure) {
        ArrayList<ArrayList<String>> temp = new ArrayList<>();

        for (int i = 0; i < array.length(); i++) {
            ArrayList<String> man = new ArrayList<>();
            for (String d : tableStructure) {
                String t = array.getJSONObject(i).getString(d);
                man.add(t);
            }
            temp.add(man);
        }

        return temp;
    }

    @Override
    public void httpParsingError(String process, String message) {
        if (progress != null) {
            progress.dispose();
        }

        if (!message.toLowerCase().equals("proses telah dibatalkan oleh user".toLowerCase())) {
            if (message.toLowerCase().equals("REQUEST TIMEOUT".toLowerCase())) {
                JOptionPane.showMessageDialog(null, message);
            } else {
                JOptionPane.showMessageDialog(null, message);
            }
        }
    }

}
